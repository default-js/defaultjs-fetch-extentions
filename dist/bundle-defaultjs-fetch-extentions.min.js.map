{"version":3,"file":"bundle-defaultjs-fetch-extentions.min.js","mappings":"sBAAIA,SAASC,UAAUC,MACvBF,SAASC,UAAUC,IAAMC,iBACrB,OAAO,IAAIC,WAAYC,sBAAsBC,KAAKC,OAAQ,uBCD1DC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,IAOV,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,QCpBfJ,EAAoBO,EAAKH,IACH,oBAAXI,QAA0BA,OAAOC,aAC1CC,OAAOC,eAAeP,EAASI,OAAOC,YAAa,CAAEG,MAAO,WAE7DF,OAAOC,eAAeP,EAAS,aAAc,CAAEQ,OAAO,K,0CCLvD,MAQMC,EAAaC,IAElB,GAAqB,GAAjBA,EAAKC,UAAkC,GAAjBD,EAAKC,SAAe,OAAOD,EAAKE,YAAYC,OAEtE,MAAMC,EAAgBJ,EAAKK,YAAcL,EAAKK,WAAWC,OAAS,EAC5DC,EAAgBP,EAAKQ,kBAAoB,EAE/C,IAAKJ,IAAkBG,EAAe,OAAOP,EAAKE,YAAYC,OAG9D,MAAMM,EAAM,GACZ,IAAIP,EAAc,GAElB,GAAIE,EACH,IAAK,IAAIM,KAAaV,EAAKK,WAAYI,EAAI,IAAqBC,EAAUC,YAAcD,EAAUE,UAGnG,IAAK,IAAIC,KAAQb,EAAKc,WACrB,GAAqB,GAAjBD,EAAKZ,SAAe,CACvB,MAAMU,EAAWE,EAAKF,SACtB,QAA6B,IAAlBF,EAAIE,GACdF,EAAIE,GAAYZ,EAAUc,OACpB,CACN,QAAkC,IAAvBJ,EAAIE,GAAUI,KAAsB,CAC9C,IAAIC,EAAMP,EAAIE,GACdF,EAAIE,GAAY,GAChBF,EAAIE,GAAUI,KAAKC,GAEpBP,EAAIE,GAAUI,KAAKhB,EAAUc,UAEH,GAAjBA,EAAKZ,UAAkC,GAAjBY,EAAKZ,WAAeC,GAA4BW,EAAKX,aAMvF,OAHAA,EAAcA,EAAYC,OACtBD,EAAYI,OAAS,IAAGG,EAzCT,KAyC4BP,GAExCO,GCzCFQ,EAAW,qBAEXC,EAAUzC,SAASC,UAAUyC,KACnC1C,SAASC,UAAUyC,KAAOvC,iBACtB,MAAMwC,EAAcrC,KAAKsC,QALT,gBAOhB,OAAGD,GAAeH,EAASK,KAAKF,IDuCZ,iBADRG,QCrCexC,KAAKC,UDsCFuC,EA7CpB,CAACA,IACC,IAAI1C,WACLC,gBAAgByC,EAAS,mBA2CIC,CAAMD,IAE1CxB,EAAUwB,ICrCPL,EAAQO,KAAK1C,MDkCxB,IAAgBwC,I","sources":["webpack://@default-js/defaultjs-fetch-extentions/./src/Xml.js","webpack://@default-js/defaultjs-fetch-extentions/webpack/bootstrap","webpack://@default-js/defaultjs-fetch-extentions/webpack/runtime/make namespace object","webpack://@default-js/defaultjs-fetch-extentions/./node_modules/@default-js/defaultjs-common-utils/src/converter/XmlToJson.js","webpack://@default-js/defaultjs-fetch-extentions/./src/XmlAsJson.js"],"sourcesContent":["if(!Response.prototype.xml)\r\nResponse.prototype.xml = async function(){\r\n    return new DOMParser().parseFromString(await this.text(), \"application/xml\");\r\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const ATTRIBUTE_PRFIX = \"@\";\r\nconst TEXTCONTENT = \"@\";\r\n\r\nconst parse = (content) => {\r\n\tconst parser = new DOMParser();\r\n\treturn parser.parseFromString(content, \"application/xml\");\r\n};\r\n\r\nconst xmlToJson = (node) => {\r\n\t// Create the return object\r\n\tif (node.nodeType == 3 || node.nodeType == 4) return node.textContent.trim();\r\n\r\n\tconst hasAttributes = node.attributes && node.attributes.length > 0;\r\n\tconst hasChildNodes = node.childElementCount > 0;\r\n\r\n\tif (!hasAttributes && !hasChildNodes) return node.textContent.trim();\r\n\r\n\t// process childs\r\n\tconst obj = {};\r\n\tlet textContent = \"\";\r\n\t// element do attributes\r\n\tif (hasAttributes) {\r\n\t\tfor (let attribute of node.attributes) obj[`${ATTRIBUTE_PRFIX}${attribute.nodeName}`] = attribute.nodeValue;\r\n\t}\r\n\r\n\tfor (let item of node.childNodes) {\r\n\t\tif (item.nodeType == 1) {\r\n\t\t\tconst nodeName = item.nodeName;\r\n\t\t\tif (typeof obj[nodeName] === \"undefined\") {\r\n\t\t\t\tobj[nodeName] = xmlToJson(item);\r\n\t\t\t} else {\r\n\t\t\t\tif (typeof obj[nodeName].push === \"undefined\") {\r\n\t\t\t\t\tvar old = obj[nodeName];\r\n\t\t\t\t\tobj[nodeName] = [];\r\n\t\t\t\t\tobj[nodeName].push(old);\r\n\t\t\t\t}\r\n\t\t\t\tobj[nodeName].push(xmlToJson(item));\r\n\t\t\t}\r\n\t\t} else if (item.nodeType == 3 || item.nodeType == 4) textContent = textContent + item.textContent;\r\n\t}\r\n\r\n\ttextContent = textContent.trim();\r\n\tif (textContent.length > 0) obj[TEXTCONTENT] = textContent;\r\n\r\n\treturn obj;\r\n};\r\n\r\nexport default (content) => {\r\n\tif (typeof content === \"string\") content = parse(content);\r\n\r\n\treturn xmlToJson(content);\r\n};\r\n","import xmlToJson from \"@default-js/defaultjs-common-utils/src/converter/XmlToJson\";\r\n\r\nconst CONTENTTYPE = \"Content-Type\";\r\nconst XMLREGEX = /.+\\/.*(xml|html)/ig\r\n\r\nconst orgJson = Response.prototype.json;\r\nResponse.prototype.json = async function(){\r\n    const contentType = this.headers[CONTENTTYPE];\r\n\r\n    if(contentType && XMLREGEX.test(contentType)){\r\n        return xmlToJson(await this.text());\r\n    }\r\n\r\n    return orgJson.call(this);\r\n};\r\n    "],"names":["Response","prototype","xml","async","DOMParser","parseFromString","this","text","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","r","Symbol","toStringTag","Object","defineProperty","value","xmlToJson","node","nodeType","textContent","trim","hasAttributes","attributes","length","hasChildNodes","childElementCount","obj","attribute","nodeName","nodeValue","item","childNodes","push","old","XMLREGEX","orgJson","json","contentType","headers","test","content","parse","call"],"sourceRoot":""}